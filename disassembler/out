case 0x00: printf("%-25s", "NOP"); break;
case 0x01: printf("%-3s 0x%02x%02x%15s;; %-15s", "LXI", co[2], co[1], "", "B <- byte 3, C <- byte 2"); op_len += 2; break;
case 0x02: printf("%-25s;; %-15s", "STAX", "(BC) <- A"); break;
case 0x03: printf("%-25s;; %-15s", "INX", "BC <- BC+1"); break;
case 0x04: printf("%-25s;; %-15s", "INR", "B <- B+1"); break;
case 0x05: printf("%-25s;; %-15s", "DCR", "B <- B-1"); break;
case 0x06: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "B <- byte 2"); op_len += 1; break;
case 0x07: printf("%-25s;; %-15s", "RLC", "A = A << 1; bit 0 = prev bit 7; CY = prev bit 7"); break;
case 0x08: printf("%-25s", "NOP"); break;
case 0x09: printf("%-25s;; %-15s", "DAD", "HL = HL + BC"); break;
case 0x0a: printf("%-25s;; %-15s", "LDAX", "A <- (BC)"); break;
case 0x0b: printf("%-25s;; %-15s", "DCX", "BC = BC-1"); break;
case 0x0c: printf("%-25s;; %-15s", "INR", "C <- C+1"); break;
case 0x0d: printf("%-25s;; %-15s", "DCR", "C <-C-1"); break;
case 0x0e: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "C <- byte 2"); op_len += 1; break;
case 0x0f: printf("%-25s;; %-15s", "RRC", "A = A >> 1; bit 7 = prev bit 0; CY = prev bit 0"); break;
case 0x10: printf("%-25s", "NOP"); break;
case 0x11: printf("%-3s 0x%02x%02x%15s;; %-15s", "LXI", co[2], co[1], "", "D <- byte 3, E <- byte 2"); op_len += 2; break;
case 0x12: printf("%-25s;; %-15s", "STAX", "(DE) <- A"); break;
case 0x13: printf("%-25s;; %-15s", "INX", "DE <- DE + 1"); break;
case 0x14: printf("%-25s;; %-15s", "INR", "D <- D+1"); break;
case 0x15: printf("%-25s;; %-15s", "DCR", "D <- D-1"); break;
case 0x16: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "D <- byte 2"); op_len += 1; break;
case 0x17: printf("%-25s;; %-15s", "RAL", "A = A << 1; bit 0 = prev CY; CY = prev bit 7"); break;
case 0x18: printf("%-25s", "NOP"); break;
case 0x19: printf("%-25s;; %-15s", "DAD", "HL = HL + DE"); break;
case 0x1a: printf("%-25s;; %-15s", "LDAX", "A <- (DE)"); break;
case 0x1b: printf("%-25s;; %-15s", "DCX", "DE = DE-1"); break;
case 0x1c: printf("%-25s;; %-15s", "INR", "E <-E+1"); break;
case 0x1d: printf("%-25s;; %-15s", "DCR", "E <- E-1"); break;
case 0x1e: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "E <- byte 2"); op_len += 1; break;
case 0x1f: printf("%-25s;; %-15s", "RAR", "A = A >> 1; bit 7 = prev bit 7; CY = prev bit 0"); break;
case 0x20: printf("%-25s", "NOP"); break;
case 0x21: printf("%-3s 0x%02x%02x%15s;; %-15s", "LXI", co[2], co[1], "", "H <- byte 3, L <- byte 2"); op_len += 2; break;
case 0x22: printf("%-4s 0x%02x%02x%14s;; %-15s", "SHLD", co[2], co[1], "", "(adr) <-L; (adr+1)<-H"); op_len += 2; break;
case 0x23: printf("%-25s;; %-15s", "INX", "HL <- HL + 1"); break;
case 0x24: printf("%-25s;; %-15s", "INR", "H <- H+1"); break;
case 0x25: printf("%-25s;; %-15s", "DCR", "H <- H-1"); break;
case 0x26: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "H <- byte 2"); op_len += 1; break;
case 0x27: printf("%-25s;; %-15s", "DAA", "special"); break;
case 0x28: printf("%-25s", "NOP"); break;
case 0x29: printf("%-25s;; %-15s", "DAD", "HL = HL + HI"); break;
case 0x2a: printf("%-4s 0x%02x%02x%14s;; %-15s", "LHLD", co[2], co[1], "", "L <- (adr); H<-(adr+1)"); op_len += 2; break;
case 0x2b: printf("%-25s;; %-15s", "DCX", "HL = HL-1"); break;
case 0x2c: printf("%-25s;; %-15s", "INR", "L <- L+1"); break;
case 0x2d: printf("%-25s;; %-15s", "DCR", "L <- L-1"); break;
case 0x2e: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "L <- byte 2"); op_len += 1; break;
case 0x2f: printf("%-25s;; %-15s", "CMA", "A <- !A"); break;
case 0x30: printf("%-25s", "NOP"); break;
case 0x31: printf("%-3s 0x%02x%02x%15s;; %-15s", "LXI", co[2], co[1], "", "SP.hi <- byte 3, SP.lo <- byte 2"); op_len += 2; break;
case 0x32: printf("%-3s 0x%02x%02x%15s;; %-15s", "STA", co[2], co[1], "", "(adr) <- A"); op_len += 2; break;
case 0x33: printf("%-25s;; %-15s", "INX", "SP = SP + 1"); break;
case 0x34: printf("%-25s;; %-15s", "INR", "(HL) <- (HL)+1"); break;
case 0x35: printf("%-25s;; %-15s", "DCR", "(HL) <- (HL)-1"); break;
case 0x36: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "(HL) <- byte 2"); op_len += 1; break;
case 0x37: printf("%-25s;; %-15s", "STC", "CY = 1"); break;
case 0x38: printf("%-25s", "NOP"); break;
case 0x39: printf("%-25s;; %-15s", "DAD", "HL = HL + SP"); break;
case 0x3a: printf("%-3s 0x%02x%02x%15s;; %-15s", "LDA", co[2], co[1], "", "A <- (adr)"); op_len += 2; break;
case 0x3b: printf("%-25s;; %-15s", "DCX", "SP = SP-1"); break;
case 0x3c: printf("%-25s;; %-15s", "INR", "A <- A+1"); break;
case 0x3d: printf("%-25s;; %-15s", "DCR", "A <- A-1"); break;
case 0x3e: printf("%-3s 0x%02x%17s;; %-15s", "MVI", co[1], "", "A <- byte 2"); op_len += 1; break;
case 0x3f: printf("%-25s;; %-15s", "CMC", "CY=!CY"); break;
case 0x40: printf("%-25s;; %-15s", "MOV", "B <- B"); break;
case 0x41: printf("%-25s;; %-15s", "MOV", "B <- C"); break;
case 0x42: printf("%-25s;; %-15s", "MOV", "B <- D"); break;
case 0x43: printf("%-25s;; %-15s", "MOV", "B <- E"); break;
case 0x44: printf("%-25s;; %-15s", "MOV", "B <- H"); break;
case 0x45: printf("%-25s;; %-15s", "MOV", "B <- L"); break;
case 0x46: printf("%-25s;; %-15s", "MOV", "B <- (HL)"); break;
case 0x47: printf("%-25s;; %-15s", "MOV", "B <- A"); break;
case 0x48: printf("%-25s;; %-15s", "MOV", "C <- B"); break;
case 0x49: printf("%-25s;; %-15s", "MOV", "C <- C"); break;
case 0x4a: printf("%-25s;; %-15s", "MOV", "C <- D"); break;
case 0x4b: printf("%-25s;; %-15s", "MOV", "C <- E"); break;
case 0x4c: printf("%-25s;; %-15s", "MOV", "C <- H"); break;
case 0x4d: printf("%-25s;; %-15s", "MOV", "C <- L"); break;
case 0x4e: printf("%-25s;; %-15s", "MOV", "C <- (HL)"); break;
case 0x4f: printf("%-25s;; %-15s", "MOV", "C <- A"); break;
case 0x50: printf("%-25s;; %-15s", "MOV", "D <- B"); break;
case 0x51: printf("%-25s;; %-15s", "MOV", "D <- C"); break;
case 0x52: printf("%-25s;; %-15s", "MOV", "D <- D"); break;
case 0x53: printf("%-25s;; %-15s", "MOV", "D <- E"); break;
case 0x54: printf("%-25s;; %-15s", "MOV", "D <- H"); break;
case 0x55: printf("%-25s;; %-15s", "MOV", "D <- L"); break;
case 0x56: printf("%-25s;; %-15s", "MOV", "D <- (HL)"); break;
case 0x57: printf("%-25s;; %-15s", "MOV", "D <- A"); break;
case 0x58: printf("%-25s;; %-15s", "MOV", "E <- B"); break;
case 0x59: printf("%-25s;; %-15s", "MOV", "E <- C"); break;
case 0x5a: printf("%-25s;; %-15s", "MOV", "E <- D"); break;
case 0x5b: printf("%-25s;; %-15s", "MOV", "E <- E"); break;
case 0x5c: printf("%-25s;; %-15s", "MOV", "E <- H"); break;
case 0x5d: printf("%-25s;; %-15s", "MOV", "E <- L"); break;
case 0x5e: printf("%-25s;; %-15s", "MOV", "E <- (HL)"); break;
case 0x5f: printf("%-25s;; %-15s", "MOV", "E <- A"); break;
case 0x60: printf("%-25s;; %-15s", "MOV", "H <- B"); break;
case 0x61: printf("%-25s;; %-15s", "MOV", "H <- C"); break;
case 0x62: printf("%-25s;; %-15s", "MOV", "H <- D"); break;
case 0x63: printf("%-25s;; %-15s", "MOV", "H <- E"); break;
case 0x64: printf("%-25s;; %-15s", "MOV", "H <- H"); break;
case 0x65: printf("%-25s;; %-15s", "MOV", "H <- L"); break;
case 0x66: printf("%-25s;; %-15s", "MOV", "H <- (HL)"); break;
case 0x67: printf("%-25s;; %-15s", "MOV", "H <- A"); break;
case 0x68: printf("%-25s;; %-15s", "MOV", "L <- B"); break;
case 0x69: printf("%-25s;; %-15s", "MOV", "L <- C"); break;
case 0x6a: printf("%-25s;; %-15s", "MOV", "L <- D"); break;
case 0x6b: printf("%-25s;; %-15s", "MOV", "L <- E"); break;
case 0x6c: printf("%-25s;; %-15s", "MOV", "L <- H"); break;
case 0x6d: printf("%-25s;; %-15s", "MOV", "L <- L"); break;
case 0x6e: printf("%-25s;; %-15s", "MOV", "L <- (HL)"); break;
case 0x6f: printf("%-25s;; %-15s", "MOV", "L <- A"); break;
case 0x70: printf("%-25s;; %-15s", "MOV", "(HL) <- B"); break;
case 0x71: printf("%-25s;; %-15s", "MOV", "(HL) <- C"); break;
case 0x72: printf("%-25s;; %-15s", "MOV", "(HL) <- D"); break;
case 0x73: printf("%-25s;; %-15s", "MOV", "(HL) <- E"); break;
case 0x74: printf("%-25s;; %-15s", "MOV", "(HL) <- H"); break;
case 0x75: printf("%-25s;; %-15s", "MOV", "(HL) <- L"); break;
case 0x76: printf("%-25s;; %-15s", "HLT", "special"); break;
case 0x77: printf("%-25s;; %-15s", "MOV", "(HL) <- A"); break;
case 0x78: printf("%-25s;; %-15s", "MOV", "A <- B"); break;
case 0x79: printf("%-25s;; %-15s", "MOV", "A <- C"); break;
case 0x7a: printf("%-25s;; %-15s", "MOV", "A <- D"); break;
case 0x7b: printf("%-25s;; %-15s", "MOV", "A <- E"); break;
case 0x7c: printf("%-25s;; %-15s", "MOV", "A <- H"); break;
case 0x7d: printf("%-25s;; %-15s", "MOV", "A <- L"); break;
case 0x7e: printf("%-25s;; %-15s", "MOV", "A <- (HL)"); break;
case 0x7f: printf("%-25s;; %-15s", "MOV", "A <- A"); break;
case 0x80: printf("%-25s;; %-15s", "ADD", "A <- A + B"); break;
case 0x81: printf("%-25s;; %-15s", "ADD", "A <- A + C"); break;
case 0x82: printf("%-25s;; %-15s", "ADD", "A <- A + D"); break;
case 0x83: printf("%-25s;; %-15s", "ADD", "A <- A + E"); break;
case 0x84: printf("%-25s;; %-15s", "ADD", "A <- A + H"); break;
case 0x85: printf("%-25s;; %-15s", "ADD", "A <- A + L"); break;
case 0x86: printf("%-25s;; %-15s", "ADD", "A <- A + (HL)"); break;
case 0x87: printf("%-25s;; %-15s", "ADD", "A <- A + A"); break;
case 0x88: printf("%-25s;; %-15s", "ADC", "A <- A + B + CY"); break;
case 0x89: printf("%-25s;; %-15s", "ADC", "A <- A + C + CY"); break;
case 0x8a: printf("%-25s;; %-15s", "ADC", "A <- A + D + CY"); break;
case 0x8b: printf("%-25s;; %-15s", "ADC", "A <- A + E + CY"); break;
case 0x8c: printf("%-25s;; %-15s", "ADC", "A <- A + H + CY"); break;
case 0x8d: printf("%-25s;; %-15s", "ADC", "A <- A + L + CY"); break;
case 0x8e: printf("%-25s;; %-15s", "ADC", "A <- A + (HL) + CY"); break;
case 0x8f: printf("%-25s;; %-15s", "ADC", "A <- A + A + CY"); break;
case 0x90: printf("%-25s;; %-15s", "SUB", "A <- A - B"); break;
case 0x91: printf("%-25s;; %-15s", "SUB", "A <- A - C"); break;
case 0x92: printf("%-25s;; %-15s", "SUB", "A <- A + D"); break;
case 0x93: printf("%-25s;; %-15s", "SUB", "A <- A - E"); break;
case 0x94: printf("%-25s;; %-15s", "SUB", "A <- A + H"); break;
case 0x95: printf("%-25s;; %-15s", "SUB", "A <- A - L"); break;
case 0x96: printf("%-25s;; %-15s", "SUB", "A <- A + (HL)"); break;
case 0x97: printf("%-25s;; %-15s", "SUB", "A <- A - A"); break;
case 0x98: printf("%-25s;; %-15s", "SBB", "A <- A - B - CY"); break;
case 0x99: printf("%-25s;; %-15s", "SBB", "A <- A - C - CY"); break;
case 0x9a: printf("%-25s;; %-15s", "SBB", "A <- A - D - CY"); break;
case 0x9b: printf("%-25s;; %-15s", "SBB", "A <- A - E - CY"); break;
case 0x9c: printf("%-25s;; %-15s", "SBB", "A <- A - H - CY"); break;
case 0x9d: printf("%-25s;; %-15s", "SBB", "A <- A - L - CY"); break;
case 0x9e: printf("%-25s;; %-15s", "SBB", "A <- A - (HL) - CY"); break;
case 0x9f: printf("%-25s;; %-15s", "SBB", "A <- A - A - CY"); break;
case 0xa0: printf("%-25s;; %-15s", "ANA", "A <- A & B"); break;
case 0xa1: printf("%-25s;; %-15s", "ANA", "A <- A & C"); break;
case 0xa2: printf("%-25s;; %-15s", "ANA", "A <- A & D"); break;
case 0xa3: printf("%-25s;; %-15s", "ANA", "A <- A & E"); break;
case 0xa4: printf("%-25s;; %-15s", "ANA", "A <- A & H"); break;
case 0xa5: printf("%-25s;; %-15s", "ANA", "A <- A & L"); break;
case 0xa6: printf("%-25s;; %-15s", "ANA", "A <- A & (HL)"); break;
case 0xa7: printf("%-25s;; %-15s", "ANA", "A <- A & A"); break;
case 0xa8: printf("%-25s;; %-15s", "XRA", "A <- A ^ B"); break;
case 0xa9: printf("%-25s;; %-15s", "XRA", "A <- A ^ C"); break;
case 0xaa: printf("%-25s;; %-15s", "XRA", "A <- A ^ D"); break;
case 0xab: printf("%-25s;; %-15s", "XRA", "A <- A ^ E"); break;
case 0xac: printf("%-25s;; %-15s", "XRA", "A <- A ^ H"); break;
case 0xad: printf("%-25s;; %-15s", "XRA", "A <- A ^ L"); break;
case 0xae: printf("%-25s;; %-15s", "XRA", "A <- A ^ (HL)"); break;
case 0xaf: printf("%-25s;; %-15s", "XRA", "A <- A ^ A"); break;
case 0xb0: printf("%-25s;; %-15s", "ORA", "A <- A | B"); break;
case 0xb1: printf("%-25s;; %-15s", "ORA", "A <- A | C"); break;
case 0xb2: printf("%-25s;; %-15s", "ORA", "A <- A | D"); break;
case 0xb3: printf("%-25s;; %-15s", "ORA", "A <- A | E"); break;
case 0xb4: printf("%-25s;; %-15s", "ORA", "A <- A | H"); break;
case 0xb5: printf("%-25s;; %-15s", "ORA", "A <- A | L"); break;
case 0xb6: printf("%-25s;; %-15s", "ORA", "A <- A | (HL)"); break;
case 0xb7: printf("%-25s;; %-15s", "ORA", "A <- A | A"); break;
case 0xb8: printf("%-25s;; %-15s", "CMP", "A - B"); break;
case 0xb9: printf("%-25s;; %-15s", "CMP", "A - C"); break;
case 0xba: printf("%-25s;; %-15s", "CMP", "A - D"); break;
case 0xbb: printf("%-25s;; %-15s", "CMP", "A - E"); break;
case 0xbc: printf("%-25s;; %-15s", "CMP", "A - H"); break;
case 0xbd: printf("%-25s;; %-15s", "CMP", "A - L"); break;
case 0xbe: printf("%-25s;; %-15s", "CMP", "A - (HL)"); break;
case 0xbf: printf("%-25s;; %-15s", "CMP", "A - A"); break;
case 0xc0: printf("%-25s;; %-15s", "RNZ", "if NZ, RET"); break;
case 0xc1: printf("%-25s;; %-15s", "POP", "C <- (sp); B <- (sp+1); sp <- sp+2"); break;
case 0xc2: printf("%-3s 0x%02x%02x%15s;; %-15s", "JNZ", co[2], co[1], "", "if NZ, PC <- adr"); op_len += 2; break;
case 0xc3: printf("%-3s 0x%02x%02x%15s;; %-15s", "JMP", co[2], co[1], "", "PC <= adr"); op_len += 2; break;
case 0xc4: printf("%-3s 0x%02x%02x%15s;; %-15s", "CNZ", co[2], co[1], "", "if NZ, CALL adr"); op_len += 2; break;
case 0xc5: printf("%-25s;; %-15s", "PUSH", "(sp-2)<-C; (sp-1)<-B; sp <- sp - 2"); break;
case 0xc6: printf("%-3s 0x%02x%17s;; %-15s", "ADI", co[1], "", "A <- A + byte"); op_len += 1; break;
case 0xc7: printf("%-25s;; %-15s", "RST", "CALL $0"); break;
case 0xc8: printf("%-25s;; %-15s", "RZ", "if Z, RET"); break;
case 0xc9: printf("%-25s;; %-15s", "RET", "PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2"); break;
case 0xca: printf("%-2s 0x%02x%02x%16s;; %-15s", "JZ", co[2], co[1], "", "if Z, PC <- adr"); op_len += 2; break;
case 0xcb: printf("%-25s", "NOP"); break;
case 0xcc: printf("%-2s 0x%02x%02x%16s;; %-15s", "CZ", co[2], co[1], "", "if Z, CALL adr"); op_len += 2; break;
case 0xcd: printf("%-4s 0x%02x%02x%14s;; %-15s", "CALL", co[2], co[1], "", "(SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC=adr"); op_len += 2; break;
case 0xce: printf("%-3s 0x%02x%17s;; %-15s", "ACI", co[1], "", "A <- A + data + CY"); op_len += 1; break;
case 0xcf: printf("%-25s;; %-15s", "RST", "CALL $8"); break;
case 0xd0: printf("%-25s;; %-15s", "RNC", "if NCY, RET"); break;
case 0xd1: printf("%-25s;; %-15s", "POP", "E <- (sp); D <- (sp+1); sp <- sp+2"); break;
case 0xd2: printf("%-3s 0x%02x%02x%15s;; %-15s", "JNC", co[2], co[1], "", "if NCY, PC<-adr"); op_len += 2; break;
case 0xd3: printf("%-3s 0x%02x%17s;; %-15s", "OUT", co[1], "", "special"); op_len += 1; break;
case 0xd4: printf("%-3s 0x%02x%02x%15s;; %-15s", "CNC", co[2], co[1], "", "if NCY, CALL adr"); op_len += 2; break;
case 0xd5: printf("%-25s;; %-15s", "PUSH", "(sp-2)<-E; (sp-1)<-D; sp <- sp - 2"); break;
case 0xd6: printf("%-3s 0x%02x%17s;; %-15s", "SUI", co[1], "", "A <- A - data"); op_len += 1; break;
case 0xd7: printf("%-25s;; %-15s", "RST", "CALL $10"); break;
case 0xd8: printf("%-25s;; %-15s", "RC", "if CY, RET"); break;
case 0xd9: printf("%-25s", "NOP"); break;
case 0xda: printf("%-2s 0x%02x%02x%16s;; %-15s", "JC", co[2], co[1], "", "if CY, PC<-adr"); op_len += 2; break;
case 0xdb: printf("%-2s 0x%02x%18s;; %-15s", "IN", co[1], "", "special"); op_len += 1; break;
case 0xdc: printf("%-2s 0x%02x%02x%16s;; %-15s", "CC", co[2], co[1], "", "if CY, CALL adr"); op_len += 2; break;
case 0xdd: printf("%-25s", "NOP"); break;
case 0xde: printf("%-3s 0x%02x%17s;; %-15s", "SBI", co[1], "", "A <- A - data - CY"); op_len += 1; break;
case 0xdf: printf("%-25s;; %-15s", "RST", "CALL $18"); break;
case 0xe0: printf("%-25s;; %-15s", "RPO", "if PO, RET"); break;
case 0xe1: printf("%-25s;; %-15s", "POP", "L <- (sp); H <- (sp+1); sp <- sp+2"); break;
case 0xe2: printf("%-3s 0x%02x%02x%15s;; %-15s", "JPO", co[2], co[1], "", "if PO, PC <- adr"); op_len += 2; break;
case 0xe3: printf("%-25s;; %-15s", "XTHL", "L <-> (SP); H <-> (SP+1)"); break;
case 0xe4: printf("%-3s 0x%02x%02x%15s;; %-15s", "CPO", co[2], co[1], "", "if PO, CALL adr"); op_len += 2; break;
case 0xe5: printf("%-25s;; %-15s", "PUSH", "(sp-2)<-L; (sp-1)<-H; sp <- sp - 2"); break;
case 0xe6: printf("%-3s 0x%02x%17s;; %-15s", "ANI", co[1], "", "A <- A & data"); op_len += 1; break;
case 0xe7: printf("%-25s;; %-15s", "RST", "CALL $20"); break;
case 0xe8: printf("%-25s;; %-15s", "RPE", "if PE, RET"); break;
case 0xe9: printf("%-25s;; %-15s", "PCHL", "PC.hi <- H; PC.lo <- L"); break;
case 0xea: printf("%-3s 0x%02x%02x%15s;; %-15s", "JPE", co[2], co[1], "", "if PE, PC <- adr"); op_len += 2; break;
case 0xeb: printf("%-25s;; %-15s", "XCHG", "H <-> D; L <-> E"); break;
case 0xec: printf("%-3s 0x%02x%02x%15s;; %-15s", "CPE", co[2], co[1], "", "if PE, CALL adr"); op_len += 2; break;
case 0xed: printf("%-25s", "NOP"); break;
case 0xee: printf("%-3s 0x%02x%17s;; %-15s", "XRI", co[1], "", "A <- A ^ data"); op_len += 1; break;
case 0xef: printf("%-25s;; %-15s", "RST", "CALL $28"); break;
case 0xf0: printf("%-25s;; %-15s", "RP", "if P, RET"); break;
case 0xf1: printf("%-25s;; %-15s", "POP", "flags <- (sp); A <- (sp+1); sp <- sp+2"); break;
case 0xf2: printf("%-2s 0x%02x%02x%16s;; %-15s", "JP", co[2], co[1], "", "if P=1 PC <- adr"); op_len += 2; break;
case 0xf3: printf("%-25s;; %-15s", "DI", "special"); break;
case 0xf4: printf("%-2s 0x%02x%02x%16s;; %-15s", "CP", co[2], co[1], "", "if P, PC <- adr"); op_len += 2; break;
case 0xf5: printf("%-25s;; %-15s", "PUSH", "(sp-2)<-flags; (sp-1)<-A; sp <- sp - 2"); break;
case 0xf6: printf("%-3s 0x%02x%17s;; %-15s", "ORI", co[1], "", "A <- A | data"); op_len += 1; break;
case 0xf7: printf("%-25s;; %-15s", "RST", "CALL $30"); break;
case 0xf8: printf("%-25s;; %-15s", "RM", "if M, RET"); break;
case 0xf9: printf("%-25s;; %-15s", "SPHL", "SP=HL"); break;
case 0xfa: printf("%-2s 0x%02x%02x%16s;; %-15s", "JM", co[2], co[1], "", "if M, PC <- adr"); op_len += 2; break;
case 0xfb: printf("%-25s;; %-15s", "EI", "special"); break;
case 0xfc: printf("%-2s 0x%02x%02x%16s;; %-15s", "CM", co[2], co[1], "", "if M, CALL adr"); op_len += 2; break;
case 0xfd: printf("%-25s", "NOP"); break;
case 0xfe: printf("%-3s 0x%02x%17s;; %-15s", "CPI", co[1], "", "A - data"); op_len += 1; break;
case 0xff: printf("%-25s;; %-15s", "RST", "CALL $38"); break;
